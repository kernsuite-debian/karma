.TH M_MAP_FD 3 "13 Nov 2005" "Karma Distribution"
.SH EXPERIMENTAL_FUNC
m_map_fd \- Map a file descriptor
.SH SYNOPSIS
.B #include <karma_m.h>
.sp
.B void * m_map_fd
.sp
(int *fd, uaddr size, flag writable, flag update_on_write,
flag warn_unsupported)
.SH DESCRIPTION
Map a file descriptor
.IP \fIfd\fP 1i
A pointer to the file descriptor to map. If the descriptor is less
than 0 then an appropriately chosen file is opened and the newly opened
file descriptor is written here.
.IP \fIsize\fP 1i
The size of the region to map.
.IP \fIwritable\fP 1i
If the mapped pages are to be writable, this must be TRUE. If
this is FALSE and the memory pages are written to, a segmentation fault
occurs.
.IP \fIupdate_on_write\fP 1i
If the disc file should be updated when the memory pages
are written to, this must be TRUE. If this is FALSE, then a write to a
memory page causes the page to be copied into swap space and the process
retains a private copy of the page from this point on.
.IP \fIwarn_unsupported\fP 1i
If TRUE, attempts to use unsupported features will
generate a warning message.
.SH RETURN VALUE
A pointer to the mapped file on success, else NULL.
.SH Multi-threading Level
Unsafe.
.SH NOTE
If <<update_on_write>> is FALSE and <<writable>> is TRUE, then some
systems require the allocation of normal virtual memory equal to the size
of the disc file at the time of mapping, while others will dynamically
allocate memory from swap space as pages are written into. In the latter
case, some systems will cause a segmentation fault if swap space is
exhausted, while other systems wait for space to be freed.
.sp
.SH AUTHOR
Richard Gooch (rgooch@atnf.csiro.au)
.SH AVAILABLITY
The Karma Distribution is available for anonymous ftp from:

ftp://ftp.atnf.csiro.au/pub/software/karma/
ftp://wuarchive.wustl.edu/graphics/graphics/packages/karma/
ftp://ftp.pwr.wroc.pl/pub/karma/

The Karma Home Page is:

http://www.atnf.csiro.au/karma/
